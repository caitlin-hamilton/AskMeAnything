{"ast":null,"code":"var _jsxFileName = \"/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/Post.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaThumbsUp, FaRegThumbsUp } from \"react-icons/fa\";\nimport { ImReply } from \"react-icons/im\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Post extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n      answer: \"\",\n      hasAnswer: false,\n      poster: \"\",\n      votes: \"\",\n      id: \"\",\n      hasUserVoted: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      text: this.props.text,\n      answer: this.props.answer,\n      hasAnswer: this.props.answer === \"\" ? false : true,\n      poster: this.props.poster,\n      votes: this.props.votes,\n      id: this.props.id,\n      hasUserVoted: this.props.hasUserVoted\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.votes !== this.props.votes) {\n      this.setState({\n        votes: this.props.votes\n      });\n    }\n  }\n\n  renderAnswer() {}\n\n  renderReply() {\n    if (this.state.hasAnswer) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(ImReply, {\n          onClick: () => this.renderAnswer()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n  renderUpVoteButton() {\n    if (this.props.hasUserVoted === true) {\n      return /*#__PURE__*/_jsxDEV(FaThumbsUp, {\n        onClick: () => this.props.decrementVote(this.props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(FaRegThumbsUp, {\n        onClick: () => this.props.incrementVote(this.props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userPost\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"userQuestion\",\n        children: this.state.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"askedBy\",\n        children: [\"Asked By: \", this.state.poster]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"likeContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"voteP\",\n          children: this.state.votes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), this.renderUpVoteButton()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), this.renderReply()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/Post.js"],"names":["React","FaThumbsUp","FaRegThumbsUp","ImReply","Post","Component","constructor","props","state","text","answer","hasAnswer","poster","votes","id","hasUserVoted","componentDidMount","setState","componentDidUpdate","prevProps","renderAnswer","renderReply","renderUpVoteButton","decrementVote","incrementVote","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaThumbsUp, FaRegThumbsUp} from \"react-icons/fa\";\nimport {ImReply} from \"react-icons/im\";\nimport './App.css'\n\nclass Post extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            text: \"\",\n            answer : \"\",\n            hasAnswer: false,\n            poster : \"\",\n            votes: \"\",\n            id: \"\",\n            hasUserVoted: false,\n        }\n\n    }\n    componentDidMount(){\n        this.setState({\n            text: this.props.text,\n            answer : this.props.answer,\n            hasAnswer: this.props.answer === \"\" ? false : true,\n            poster : this.props.poster,\n            votes: this.props.votes,\n            id: this.props.id,\n            hasUserVoted: this.props.hasUserVoted\n        })\n    }\n\n    componentDidUpdate(prevProps){\n        if(prevProps.votes !== this.props.votes) {\n            this.setState({\n                votes: this.props.votes\n            })\n\n        }\n    }\n\n    renderAnswer(){\n\n    }\n\n    renderReply(){\n        if (this.state.hasAnswer){\n            return (\n            <div>\n                <ImReply onClick={() => this.renderAnswer()}/>\n                <p>{this.state.answer}</p>\n            </div>\n            )\n        }\n    }\n    \n    renderUpVoteButton() {\n        if (this.props.hasUserVoted === true){\n            return <FaThumbsUp onClick={() => this.props.decrementVote(this.props.id)}/>\n        }\n        else\n        {\n            return <FaRegThumbsUp onClick={() => this.props.incrementVote(this.props.id)}/>\n        }\n    }\n    render(){\n    return (\n        <div className=\"userPost\">\n            <p className=\"userQuestion\">{this.state.text}</p>\n            <p className=\"askedBy\">Asked By: {this.state.poster}</p>\n            <div className=\"likeContainer\">\n                <p className=\"voteP\">{this.state.votes}</p>\n                {this.renderUpVoteButton()}\n            </div>\n            {this.renderReply()}\n        </div>\n      );\n    }\n}\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}