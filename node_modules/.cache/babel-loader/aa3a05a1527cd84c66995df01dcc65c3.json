{"ast":null,"code":"var _jsxFileName = \"/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/Home.js\";\nimport React from 'react';\nimport Post from './Post';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from '@material-ui/core/Button';\nimport QuestionModal from './QuestionSubmit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateSortLogic = (attribute, direction) => {\n      let localSortLogic = { ...this.state.sortLogic\n      };\n      Object.keys(localSortLogic).forEach(v => localSortLogic[v] = false);\n      localSortLogic[attribute] = direction;\n      return localSortLogic;\n    };\n\n    this.sortAscending = attribute => {\n      let data = [].concat(this.state.inputData).sort((a, b) => b[attribute] - a[attribute]);\n      this.setState({\n        inputData: data,\n        sortLogic: this.updateSortLogic(attribute, \"asc\")\n      });\n    };\n\n    this.sortDescending = attribute => {\n      let data = [].concat(this.state.inputData).sort((a, b) => a[attribute] - b[attribute]);\n      this.setState({\n        inputData: data,\n        sortLogic: this.updateSortLogic(attribute, \"desc\")\n      });\n    };\n\n    this.state = {\n      inputData: [],\n      userId: \"\",\n      voterData: [],\n      isModalOpen: false,\n      sortLogic: {\n        votes: \"asc\",\n        timePosted: false\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      inputData: this.props.getTableData(),\n      voterData: this.props.voterData,\n      userId: this.props.userId\n    }, () => {\n      this.sortAscending(\"votes\");\n    });\n  }\n\n  sortByAttribute(attribute) {\n    if (!this.state.sortLogic[attribute] || this.state.sortLogic[attribute] === \"desc\") {\n      this.sortAscending(attribute);\n    } else if (this.state.sortLogic[attribute] === \"asc\") {\n      this.sortDescending(attribute);\n    }\n  }\n\n  incrementVote(postId) {\n    let inputData = this.state.inputData.map(post => {\n      if (post.id === postId) {\n        post.votes = post.votes + 1;\n      }\n\n      return post;\n    });\n    let voterData = [].concat(this.state.voterData);\n    voterData.push({\n      id: postId\n    });\n    this.setState({\n      inputData: inputData,\n      voterData: voterData\n    });\n  }\n\n  decrementVote(postId) {\n    let inputData = this.state.inputData.map(post => {\n      if (post.id === postId) {\n        post.votes = post.votes - 1;\n      }\n\n      return post;\n    });\n    let voterData = this.state.voterData.filter(element => {\n      return element[\"id\"] != postId;\n    });\n    this.setState({\n      inputData: inputData,\n      voterData: voterData\n    });\n  }\n\n  hasUserVoted(postId) {\n    let result = false;\n    this.state.voterData.map(question => {\n      if (eval(question.id) === Number(postId)) {\n        result = true;\n      }\n    });\n    return result;\n  }\n\n  switchModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submitQuestionContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          onClick: () => this.switchModal(),\n          placeholder: \"Ask us anything...\",\n          className: \"submitQuestionText\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(QuestionModal, {\n          isModalOpen: this.state.isModalOpen,\n          switchModal: () => this.switchModal()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"adminButton\",\n        onClick: () => {\n          this.sortByAttribute('votes');\n        },\n        children: \"Popular\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"adminButton\",\n        onClick: () => {\n          this.sortByAttribute('timePosted');\n        },\n        children: \"Most Recent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postContainer\",\n        children: this.state.inputData.map((item, index) => /*#__PURE__*/_jsxDEV(Post, {\n          votes: item.votes,\n          poster: item.poster,\n          text: item.text,\n          id: item.id,\n          incrementVote: this.incrementVote.bind(this),\n          decrementVote: this.decrementVote.bind(this),\n          hasUserVoted: this.hasUserVoted(item.id),\n          answer: item.answer\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/Home.js"],"names":["React","Post","Button","QuestionModal","Home","Component","constructor","props","updateSortLogic","attribute","direction","localSortLogic","state","sortLogic","Object","keys","forEach","v","sortAscending","data","concat","inputData","sort","a","b","setState","sortDescending","userId","voterData","isModalOpen","votes","timePosted","componentDidMount","getTableData","sortByAttribute","incrementVote","postId","map","post","id","push","decrementVote","filter","element","hasUserVoted","result","question","eval","Number","switchModal","render","item","index","poster","text","bind","answer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Post from './Post'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from '@material-ui/core/Button';\nimport QuestionModal from './QuestionSubmit';\n\nexport default class Home extends React.Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            inputData: [],\n            userId: \"\",\n            voterData: [],\n            isModalOpen: false,\n            sortLogic : {\n                votes: \"asc\",\n                timePosted: false\n            }\n        }\n    }\n    componentDidMount(){\n        this.setState({\n            inputData: this.props.getTableData(),\n            voterData: this.props.voterData,\n            userId: this.props.userId\n        }, () => {\n            this.sortAscending(\"votes\")\n        })\n    }\n\n\n    updateSortLogic = (attribute, direction) => {\n        let localSortLogic = {...this.state.sortLogic}\n        Object.keys(localSortLogic).forEach(v => localSortLogic[v] = false)\n        localSortLogic[attribute] = direction;\n        return localSortLogic\n    }\n    sortAscending = (attribute) => {\n        let data = [].concat(this.state.inputData).sort((a, b) => b[attribute] - a[attribute])\n        this.setState({\n            inputData: data,\n            sortLogic: this.updateSortLogic(attribute, \"asc\")\n        })\n    }\n    sortDescending = (attribute) => {\n        let data = [].concat(this.state.inputData).sort((a, b) => a[attribute] - b[attribute])\n        this.setState({\n            inputData: data,\n            sortLogic: this.updateSortLogic(attribute, \"desc\")\n        })\n    }\n\n    sortByAttribute(attribute){\n        if ( !this.state.sortLogic[attribute] || this.state.sortLogic[attribute] === \"desc\") {\n            this.sortAscending(attribute)\n        }\n        else if (this.state.sortLogic[attribute] === \"asc\") {\n            this.sortDescending(attribute)\n            \n        }\n\n    }\n\n    incrementVote(postId){\n        let inputData = this.state.inputData.map((post) => {\n            if(post.id ===  postId){\n                post.votes = post.votes + 1\n            }\n            return post\n        })\n        let voterData = [].concat(this.state.voterData)\n        voterData.push({\n            id: postId\n        })\n\n        this.setState({\n            inputData: inputData,\n            voterData: voterData\n        })\n    }\n\n    decrementVote(postId){\n        let inputData = this.state.inputData.map((post) => {\n            if(post.id ===  postId){\n                post.votes = post.votes - 1\n            }\n            return post\n        })\n\n        let voterData = this.state.voterData.filter((element) => {\n            return element[\"id\"] != postId\n        })\n\n        this.setState({\n            inputData: inputData,\n            voterData: voterData\n        })\n    }\n\n    hasUserVoted(postId){\n        let result = false\n        this.state.voterData.map((question)=> {\n            if(eval(question.id) === Number(postId)){\n                result = true\n            }\n        })\n        return result\n    }\n\n    switchModal() {\n        this.setState({\n            isModalOpen: ! this.state.isModalOpen\n        })\n    }\n\n    render(){\n\n        return(\n            <div className=\"container\">\n                <div className=\"submitQuestionContainer\">\n                    <textarea onClick={() => this.switchModal()} placeholder='Ask us anything...' className=\"submitQuestionText\"/>\n                    <QuestionModal isModalOpen={this.state.isModalOpen} switchModal={() => this.switchModal()}/>\n                </div>\n                <Button className=\"adminButton\" onClick={() => {this.sortByAttribute('votes')}}>Popular</Button>\n                <Button className=\"adminButton\" onClick={() => {this.sortByAttribute('timePosted')}}>Most Recent</Button>\n                <div className=\"postContainer\">\n                    {this.state.inputData.map((item, index) => \n                    <Post votes={item.votes} poster={item.poster} text={item.text} id={item.id} key={item.id} incrementVote={this.incrementVote.bind(this)} decrementVote={this.decrementVote.bind(this)} hasUserVoted={this.hasUserVoted(item.id)} answer={item.answer}/>)}\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}