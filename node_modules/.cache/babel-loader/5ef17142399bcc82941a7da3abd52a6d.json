{"ast":null,"code":"var _jsxFileName = \"/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/AdminQuestion.js\";\nimport React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { GoKebabHorizontal } from \"react-icons/go\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport themes from './Themes';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n  background: isDragging ? \"lightgreen\" : \"lightgrey\",\n  ...draggableStyle\n});\n\nexport default class AdminQuestion extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      theme: \"Select Theme\",\n      isModalOpen: false\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.theme !== \"\") {\n      this.setState({\n        theme: this.props.theme\n      });\n    }\n  }\n\n  updateTheme(theme) {\n    this.setState({\n      theme: theme\n    });\n  }\n\n  showEditModal() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Draggable, {\n      draggableId: this.props.dragId,\n      index: this.props.index,\n      children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"adminPost\",\n        ref: provided.innerRef,\n        ...provided.draggableProps,\n        ...provided.dragHandleProps,\n        style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"question\",\n          children: this.props.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"editButton\",\n          children: /*#__PURE__*/_jsxDEV(GoKebabHorizontal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"textStyle\",\n          children: [\"Votes: \", this.props.votes, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          onSelect: () => this.updateTheme(),\n          title: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Dropdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 82\n          }, this),\n          className: \"dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            className: \"dropdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            className: \"dropdown\",\n            children: themes.map(item => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              eventKey: item,\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 59\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, this.props.dragId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/AdminQuestion.js"],"names":["React","Draggable","GoKebabHorizontal","Dropdown","themes","Button","grid","getItemStyle","isDragging","draggableStyle","userSelect","padding","margin","background","AdminQuestion","Component","constructor","props","state","theme","isModalOpen","componentDidMount","setState","updateTheme","showEditModal","render","dragId","index","provided","snapshot","innerRef","draggableProps","dragHandleProps","style","text","votes","map","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { GoKebabHorizontal } from \"react-icons/go\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport themes from './Themes'\nimport Button from '@material-ui/core/Button';\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    userSelect: \"none\",\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n    background: isDragging ? \"lightgreen\" : \"lightgrey\",\n    ...draggableStyle\n  });\n\nexport default class AdminQuestion extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state ={\n            theme: \"Select Theme\",\n            isModalOpen: false\n        }\n    }\n\n    componentDidMount(){\n        if (this.props.theme !== \"\"){\n            this.setState({\n                theme: this.props.theme\n            })\n        }\n    }\n\n    updateTheme(theme){\n        this.setState({\n            theme: theme\n        })\n    }\n\n    showEditModal(){\n\n    }\n\n    render() {\n        return (\n            <Draggable\n                key={this.props.dragId}\n                draggableId={this.props.dragId}\n                index={this.props.index}>\n                {(provided, snapshot) => (\n                    <div className=\"adminPost\"\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={getItemStyle(\n                            snapshot.isDragging,\n                            provided.draggableProps.style\n                        )}>\n                            <p className=\"question\">{this.props.text}</p>\n                            <Button className=\"editButton\">{<GoKebabHorizontal/>}</Button>\n                            <h5 className=\"textStyle\">Votes: {this.props.votes} </h5>\n                        \n                            <Dropdown onSelect={() => this.updateTheme()} title={<span>Dropdown</span>} className=\"dropdown\">\n                                <Dropdown.Toggle className=\"dropdown\">\n                                </Dropdown.Toggle>\n                                <Dropdown.Menu className=\"dropdown\">\n                                    {themes.map((item) => <Dropdown.Item eventKey={item}>{item}</Dropdown.Item>)}\n                                </Dropdown.Menu>\n                            </Dropdown>\n                    </div>\n                )}\n            </Draggable>\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}