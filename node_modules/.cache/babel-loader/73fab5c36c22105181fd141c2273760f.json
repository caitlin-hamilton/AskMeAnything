{"ast":null,"code":"var _jsxFileName = \"/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/AdminQuestion.js\";\nimport React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { GoKebabHorizontal } from \"react-icons/go\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport themes from './Themes';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n  background: isDragging ? \"lightgreen\" : \"lightgrey\",\n  ...draggableStyle\n});\n\nfunction AdminQuestion(props) {\n  var questionTheme;\n\n  function setDefaultTheme() {\n    if (props.theme === \"\") {\n      questionTheme = 'Select Theme';\n    } else {\n      questionTheme = props.theme;\n    }\n\n    return questionTheme;\n  }\n\n  function updateTheme(evt) {\n    questionTheme = evt;\n    props.updateTheme(questionTheme, props.dragId);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: props.dragId,\n    index: props.index,\n    children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"adminPost\",\n      ref: provided.innerRef,\n      ...provided.draggableProps,\n      ...provided.dragHandleProps,\n      style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question\",\n        children: props.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"editButton\",\n        children: /*#__PURE__*/_jsxDEV(GoKebabHorizontal, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"textStyle\",\n        children: [\"Votes: \", props.votes, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        onSelect: updateTheme,\n        title: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"dropdown\",\n          children: \"Dropdown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 65\n        }, this),\n        id: \"nav-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          variant: \"success\",\n          id: \"dropdown-basic\",\n          className: \"dropdown\",\n          children: setDefaultTheme()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: themes.map(item => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: item,\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 55\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)\n  }, props.dragId, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_c = AdminQuestion;\nexport default AdminQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminQuestion\");","map":{"version":3,"sources":["/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/AdminQuestion.js"],"names":["React","Draggable","GoKebabHorizontal","Dropdown","themes","Button","grid","getItemStyle","isDragging","draggableStyle","userSelect","padding","margin","background","AdminQuestion","props","questionTheme","setDefaultTheme","theme","updateTheme","evt","dragId","index","provided","snapshot","innerRef","draggableProps","dragHandleProps","style","text","votes","map","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { GoKebabHorizontal } from \"react-icons/go\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport themes from './Themes'\nimport Button from '@material-ui/core/Button';\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    userSelect: \"none\",\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n    background: isDragging ? \"lightgreen\" : \"lightgrey\",\n    ...draggableStyle\n  });\n\nfunction AdminQuestion(props){\n    var questionTheme\n\n    function setDefaultTheme(){\n        if(props.theme === \"\"){\n            questionTheme = 'Select Theme'\n        }\n        else {\n            questionTheme = props.theme\n        }\n        return questionTheme\n    }\n\n    function updateTheme(evt){\n        questionTheme = evt\n        props.updateTheme(questionTheme, props.dragId)\n    }\n    return (\n        <Draggable\n            key={props.dragId}\n            draggableId={props.dragId}\n            index={props.index}>\n            {(provided, snapshot) => (\n                <div className=\"adminPost\"\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    style={getItemStyle(\n                        snapshot.isDragging,\n                        provided.draggableProps.style\n                      )}>\n                        <p className=\"question\">{props.text}</p>\n                        <Button className=\"editButton\">{<GoKebabHorizontal/>}</Button>\n                        <h5 className=\"textStyle\">Votes: {props.votes} </h5>\n                    \n                        <Dropdown onSelect={updateTheme} title={<span className=\"dropdown\">Dropdown</span>} id=\"nav-dropdown\">\n                            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" className=\"dropdown\">\n                                {setDefaultTheme()}\n                            </Dropdown.Toggle>\n                            <Dropdown.Menu>\n                                {themes.map((item) => <Dropdown.Item eventKey={item}>{item}</Dropdown.Item>)}\n                            </Dropdown.Menu>\n                        </Dropdown>\n                </div>\n            )}\n        </Draggable>\n    )\n\n}\n\nexport default AdminQuestion;"]},"metadata":{},"sourceType":"module"}