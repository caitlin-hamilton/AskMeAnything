{"ast":null,"code":"var _jsxFileName = \"/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/Admin.js\";\nimport React, { Component } from 'react';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport AdminQuestion from './AdminQuestion';\nimport Button from '@material-ui/core/Button';\nimport ThemeModal from './ThemeModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n  destClone.splice(droppableDestination.index, 0, removed);\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n  return result;\n};\n\nconst grid = 8;\n\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? 'lightblue' : 'darkgrey',\n  padding: grid,\n  width: \"100%\",\n  height: \"100%\"\n});\n\nexport default class AdminBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.id2List = {\n      droppable: 'inputData',\n      droppable2: 'selected'\n    };\n\n    this.getList = id => this.state[this.id2List[id]];\n\n    this.onDragEnd = result => {\n      const {\n        source,\n        destination\n      } = result;\n\n      if (!destination) {\n        return;\n      }\n\n      if (source.droppableId === destination.droppableId) {\n        const items = reorder(this.getList(source.droppableId), source.index, destination.index);\n\n        if (source.droppableId === 'droppable2') {\n          this.setState({\n            selected: items\n          });\n        } else if (source.droppableId === \"droppable\") {\n          this.setState({\n            inputData: items\n          });\n        }\n      } else {\n        const result = move(this.getList(source.droppableId), this.getList(destination.droppableId), source, destination);\n        this.setState({\n          inputData: result.droppable,\n          selected: result.droppable2\n        });\n      }\n    };\n\n    this.updateSortLogic = (questionList, attribute, direction) => {\n      let localSortLogic = { ...this.state.sortLogic\n      };\n      Object.keys(localSortLogic[questionList]).forEach(v => localSortLogic[questionList][v] = false);\n      localSortLogic[questionList][attribute] = direction;\n      return localSortLogic;\n    };\n\n    this.sortAscending = (questionList, attribute) => {\n      let data = [].concat(this.state[questionList]).sort((a, b) => b[attribute] - a[attribute]);\n      this.setState({\n        [questionList]: data,\n        sortLogic: this.updateSortLogic(questionList, attribute, \"asc\")\n      });\n    };\n\n    this.sortDescending = (questionList, attribute) => {\n      let data = [].concat(this.state[questionList]).sort((a, b) => a[attribute] - b[attribute]);\n      this.setState({\n        [questionList]: data,\n        sortLogic: this.updateSortLogic(questionList, attribute, \"desc\")\n      });\n    };\n\n    this.updateTheme = (newTheme, questionId) => {\n      this.updateThemeForInput('inputData', newTheme, questionId);\n      this.updateThemeForInput('selected', newTheme, questionId);\n    };\n\n    this.state = {\n      inputData: [],\n      selected: [],\n      isModalOpen: false,\n      sortLogic: {\n        \"inputData\": {\n          votes: \"asc\",\n          timePosted: false\n        },\n        \"selected\": {\n          votes: \"asc\",\n          timePosted: false\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      inputData: this.props.getTableData()\n    });\n  }\n\n  switchModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  sortByAttribute(questionList, attribute) {\n    if (!this.state.sortLogic[questionList][attribute] || this.state.sortLogic[questionList][attribute] === \"desc\") {\n      this.sortAscending(questionList, attribute);\n    } else if (this.state.sortLogic[questionList][attribute] === \"asc\") {\n      this.sortDescending(questionList, attribute);\n    }\n  }\n\n  updateThemeForInput(questionList, newTheme, questionId) {\n    let data = [...this.state[questionList]];\n\n    for (let i = 0; i < data.length; i++) {\n      let item = data[i];\n\n      if (questionId === item[\"id\"]) {\n        item[\"theme\"] = newTheme;\n        data[i] = item;\n        this.setState({\n          [questionList]: data\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questionList\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"one\",\n          children: \"Question Submissions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"two\",\n          children: \"Meeting Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonContainer\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"adminButton\",\n          onClick: () => {\n            this.sortByAttribute('inputData', 'votes');\n          },\n          children: \"Sort By Votes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"adminButton\",\n          onClick: () => {\n            this.sortByAttribute('inputData', 'timePosted');\n          },\n          children: \"Sort By Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"adminButton\",\n          onClick: () => this.switchModal(),\n          children: \"Edit Themes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ThemeModal, {\n          isModalOpen: this.state.isModalOpen,\n          switchModal: () => this.switchModal()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"adminButton\",\n          children: \"Save Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questionList\",\n          children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n            onDragEnd: this.onDragEnd,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"one\",\n              children: /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: \"droppable\",\n                children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  style: getListStyle(snapshot.isDraggingOver),\n                  children: [this.state.inputData.map((item, index) => /*#__PURE__*/_jsxDEV(AdminQuestion, {\n                    provided: provided,\n                    snapshot: snapshot,\n                    text: item.text,\n                    dragId: item.id,\n                    index: index,\n                    timePosted: item.timePosted,\n                    votes: item.votes,\n                    theme: item.theme,\n                    updateTheme: this.updateTheme\n                  }, item.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 45\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"two\",\n              children: /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: \"droppable2\",\n                children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  style: getListStyle(snapshot.isDraggingOver),\n                  children: [this.state.selected.map((item, index) => /*#__PURE__*/_jsxDEV(AdminQuestion, {\n                    provided: provided,\n                    snapshot: snapshot,\n                    text: item.text,\n                    dragId: item.id,\n                    index: index,\n                    timePosted: item.timePosted,\n                    votes: item.votes,\n                    theme: item.theme,\n                    updateTheme: this.updateTheme\n                  }, item.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 45\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/Admin.js"],"names":["React","Component","DragDropContext","Droppable","AdminQuestion","Button","ThemeModal","reorder","list","startIndex","endIndex","result","Array","from","removed","splice","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","grid","getListStyle","isDraggingOver","background","padding","width","height","AdminBoard","constructor","props","id2List","droppable","droppable2","getList","id","state","onDragEnd","items","setState","selected","inputData","updateSortLogic","questionList","attribute","direction","localSortLogic","sortLogic","Object","keys","forEach","v","sortAscending","data","concat","sort","a","b","sortDescending","updateTheme","newTheme","questionId","updateThemeForInput","isModalOpen","votes","timePosted","componentDidMount","getTableData","switchModal","sortByAttribute","i","length","item","render","provided","snapshot","innerRef","map","text","theme","placeholder"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,EAA0BC,SAA1B,QAA0C,qBAA1C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,OAAO,GAAG,CAACC,IAAD,EAAOC,UAAP,EAAmBC,QAAnB,KAAgC;AAC5C,QAAMC,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAWL,IAAX,CAAf;AACA,QAAM,CAACM,OAAD,IAAYH,MAAM,CAACI,MAAP,CAAcN,UAAd,EAA0B,CAA1B,CAAlB;AACAE,EAAAA,MAAM,CAACI,MAAP,CAAcL,QAAd,EAAwB,CAAxB,EAA2BI,OAA3B;AAEA,SAAOH,MAAP;AACH,CAND;;AAQA,MAAMK,IAAI,GAAG,CAACC,MAAD,EAASC,WAAT,EAAsBC,eAAtB,EAAuCC,oBAAvC,KAAgE;AACzE,QAAMC,WAAW,GAAGT,KAAK,CAACC,IAAN,CAAWI,MAAX,CAApB;AACA,QAAMK,SAAS,GAAGV,KAAK,CAACC,IAAN,CAAWK,WAAX,CAAlB;AACA,QAAM,CAACJ,OAAD,IAAYO,WAAW,CAACN,MAAZ,CAAmBI,eAAe,CAACI,KAAnC,EAA0C,CAA1C,CAAlB;AAEAD,EAAAA,SAAS,CAACP,MAAV,CAAiBK,oBAAoB,CAACG,KAAtC,EAA6C,CAA7C,EAAgDT,OAAhD;AAEA,QAAMH,MAAM,GAAG,EAAf;AACAA,EAAAA,MAAM,CAACQ,eAAe,CAACK,WAAjB,CAAN,GAAsCH,WAAtC;AACAV,EAAAA,MAAM,CAACS,oBAAoB,CAACI,WAAtB,CAAN,GAA2CF,SAA3C;AAEA,SAAOX,MAAP;AACH,CAZD;;AAcA,MAAMc,IAAI,GAAG,CAAb;;AAEA,MAAMC,YAAY,GAAGC,cAAc,KAAK;AACpCC,EAAAA,UAAU,EAAED,cAAc,GAAG,WAAH,GAAiB,UADP;AAEpCE,EAAAA,OAAO,EAAEJ,IAF2B;AAGpCK,EAAAA,KAAK,EAAE,MAH6B;AAIpCC,EAAAA,MAAM,EAAC;AAJ6B,CAAL,CAAnC;;AAOA,eAAe,MAAMC,UAAN,SAAyB/B,SAAzB,CAAmC;AAC9CgC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AADc,SA8BlBC,OA9BkB,GA8BR;AACNC,MAAAA,SAAS,EAAE,WADL;AAENC,MAAAA,UAAU,EAAE;AAFN,KA9BQ;;AAAA,SAmClBC,OAnCkB,GAmCRC,EAAE,IAAI,KAAKC,KAAL,CAAW,KAAKL,OAAL,CAAaI,EAAb,CAAX,CAnCE;;AAAA,SAqClBE,SArCkB,GAqCN9B,MAAM,IAAI;AAClB,YAAM;AAAEM,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAA0BP,MAAhC;;AAEA,UAAI,CAACO,WAAL,EAAkB;AACd;AACH;;AAED,UAAID,MAAM,CAACO,WAAP,KAAuBN,WAAW,CAACM,WAAvC,EAAoD;AAChD,cAAMkB,KAAK,GAAGnC,OAAO,CACjB,KAAK+B,OAAL,CAAarB,MAAM,CAACO,WAApB,CADiB,EAEjBP,MAAM,CAACM,KAFU,EAGjBL,WAAW,CAACK,KAHK,CAArB;;AAMA,YAAIN,MAAM,CAACO,WAAP,KAAuB,YAA3B,EAAyC;AACrC,eAAKmB,QAAL,CAAc;AACVC,YAAAA,QAAQ,EAACF;AADC,WAAd;AAGH,SAJD,MAKK,IAAIzB,MAAM,CAACO,WAAP,KAAqB,WAAzB,EAAqC;AACtC,eAAKmB,QAAL,CAAc;AACVE,YAAAA,SAAS,EAACH;AADA,WAAd;AAGH;AACJ,OAjBD,MAiBO;AACH,cAAM/B,MAAM,GAAGK,IAAI,CACf,KAAKsB,OAAL,CAAarB,MAAM,CAACO,WAApB,CADe,EAEf,KAAKc,OAAL,CAAapB,WAAW,CAACM,WAAzB,CAFe,EAGfP,MAHe,EAIfC,WAJe,CAAnB;AAOA,aAAKyB,QAAL,CAAc;AACVE,UAAAA,SAAS,EAAElC,MAAM,CAACyB,SADR;AAEVQ,UAAAA,QAAQ,EAAEjC,MAAM,CAAC0B;AAFP,SAAd;AAIH;AACJ,KA1EiB;;AAAA,SA4ElBS,eA5EkB,GA4EA,CAACC,YAAD,EAAeC,SAAf,EAA0BC,SAA1B,KAAwC;AACtD,UAAIC,cAAc,GAAG,EAAC,GAAG,KAAKV,KAAL,CAAWW;AAAf,OAArB;AACAC,MAAAA,MAAM,CAACC,IAAP,CAAYH,cAAc,CAACH,YAAD,CAA1B,EAA0CO,OAA1C,CAAkDC,CAAC,IAAIL,cAAc,CAACH,YAAD,CAAd,CAA6BQ,CAA7B,IAAkC,KAAzF;AACAL,MAAAA,cAAc,CAACH,YAAD,CAAd,CAA6BC,SAA7B,IAA0CC,SAA1C;AACA,aAAOC,cAAP;AACH,KAjFiB;;AAAA,SAkFlBM,aAlFkB,GAkFF,CAACT,YAAD,EAAeC,SAAf,KAA6B;AACzC,UAAIS,IAAI,GAAG,GAAGC,MAAH,CAAU,KAAKlB,KAAL,CAAWO,YAAX,CAAV,EAAoCY,IAApC,CAAyC,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACb,SAAD,CAAD,GAAeY,CAAC,CAACZ,SAAD,CAAnE,CAAX;AACA,WAAKL,QAAL,CAAc;AACV,SAACI,YAAD,GAAgBU,IADN;AAEVN,QAAAA,SAAS,EAAE,KAAKL,eAAL,CAAqBC,YAArB,EAAmCC,SAAnC,EAA8C,KAA9C;AAFD,OAAd;AAIH,KAxFiB;;AAAA,SAyFlBc,cAzFkB,GAyFD,CAACf,YAAD,EAAeC,SAAf,KAA6B;AAC1C,UAAIS,IAAI,GAAG,GAAGC,MAAH,CAAU,KAAKlB,KAAL,CAAWO,YAAX,CAAV,EAAoCY,IAApC,CAAyC,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACZ,SAAD,CAAD,GAAea,CAAC,CAACb,SAAD,CAAnE,CAAX;AACA,WAAKL,QAAL,CAAc;AACV,SAACI,YAAD,GAAgBU,IADN;AAEVN,QAAAA,SAAS,EAAE,KAAKL,eAAL,CAAqBC,YAArB,EAAmCC,SAAnC,EAA8C,MAA9C;AAFD,OAAd;AAIH,KA/FiB;;AAAA,SA0HlBe,WA1HkB,GA0HJ,CAACC,QAAD,EAAWC,UAAX,KAA0B;AACpC,WAAKC,mBAAL,CAAyB,WAAzB,EAAsCF,QAAtC,EAAgDC,UAAhD;AACA,WAAKC,mBAAL,CAAyB,UAAzB,EAAqCF,QAArC,EAA+CC,UAA/C;AACH,KA7HiB;;AAEd,SAAKzB,KAAL,GAAa;AACTK,MAAAA,SAAS,EAAE,EADF;AAETD,MAAAA,QAAQ,EAAE,EAFD;AAGTuB,MAAAA,WAAW,EAAE,KAHJ;AAIThB,MAAAA,SAAS,EAAG;AACR,qBAAc;AACViB,UAAAA,KAAK,EAAE,KADG;AAEVC,UAAAA,UAAU,EAAE;AAFF,SADN;AAKR,oBAAa;AACTD,UAAAA,KAAK,EAAE,KADE;AAETC,UAAAA,UAAU,EAAE;AAFH;AALL;AAJH,KAAb;AAeH;;AACDC,EAAAA,iBAAiB,GAAE;AACf,SAAK3B,QAAL,CAAc;AACVE,MAAAA,SAAS,EAAE,KAAKX,KAAL,CAAWqC,YAAX;AADD,KAAd;AAGH;;AAEDC,EAAAA,WAAW,GAAG;AACV,SAAK7B,QAAL,CAAc;AACVwB,MAAAA,WAAW,EAAE,CAAE,KAAK3B,KAAL,CAAW2B;AADhB,KAAd;AAGH;;AAqEDM,EAAAA,eAAe,CAAC1B,YAAD,EAAeC,SAAf,EAAyB;AACpC,QAAK,CAAC,KAAKR,KAAL,CAAWW,SAAX,CAAqBJ,YAArB,EAAmCC,SAAnC,CAAD,IAAkD,KAAKR,KAAL,CAAWW,SAAX,CAAqBJ,YAArB,EAAmCC,SAAnC,MAAkD,MAAzG,EAAiH;AAC7G,WAAKQ,aAAL,CAAmBT,YAAnB,EAAgCC,SAAhC;AACH,KAFD,MAGK,IAAI,KAAKR,KAAL,CAAWW,SAAX,CAAqBJ,YAArB,EAAmCC,SAAnC,MAAgD,KAApD,EAA2D;AAC5D,WAAKc,cAAL,CAAoBf,YAApB,EAAkCC,SAAlC;AAEH;AAEJ;;AAEDkB,EAAAA,mBAAmB,CAACnB,YAAD,EAAeiB,QAAf,EAAyBC,UAAzB,EAAoC;AACnD,QAAIR,IAAI,GAAG,CAAC,GAAG,KAAKjB,KAAL,CAAWO,YAAX,CAAJ,CAAX;;AACA,SAAI,IAAI2B,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAEjB,IAAI,CAACkB,MAArB,EAA6BD,CAAC,EAA9B,EAAkC;AAC9B,UAAIE,IAAI,GAAGnB,IAAI,CAACiB,CAAD,CAAf;;AACA,UAAGT,UAAU,KAAKW,IAAI,CAAC,IAAD,CAAtB,EAA6B;AACzBA,QAAAA,IAAI,CAAC,OAAD,CAAJ,GAAgBZ,QAAhB;AACAP,QAAAA,IAAI,CAACiB,CAAD,CAAJ,GAAUE,IAAV;AACA,aAAKjC,QAAL,CAAc;AACV,WAACI,YAAD,GAAgBU;AADN,SAAd;AAGH;AACJ;AACJ;;AAODoB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACQ,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAgC,UAAA,OAAO,EAAE,MAAM;AAAC,iBAAKJ,eAAL,CAAqB,WAArB,EAAkC,OAAlC;AAA2C,WAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR,eAEQ,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAgC,UAAA,OAAO,EAAE,MAAM;AAAC,iBAAKA,eAAL,CAAqB,WAArB,EAAkC,YAAlC;AAAgD,WAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR,eAGQ,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAgC,UAAA,OAAO,EAAE,MAAM,KAAKD,WAAL,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHR,eAIQ,QAAC,UAAD;AAAY,UAAA,WAAW,EAAE,KAAKhC,KAAL,CAAW2B,WAApC;AAAiD,UAAA,WAAW,EAAE,MAAM,KAAKK,WAAL;AAApE;AAAA;AAAA;AAAA;AAAA,gBAJR,eAKQ,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALR;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAYI;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCACI,QAAC,eAAD;AAAiB,YAAA,SAAS,EAAE,KAAK/B,SAAjC;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA,qCACA,QAAC,SAAD;AAAW,gBAAA,WAAW,EAAC,WAAvB;AAAA,0BACK,CAACqC,QAAD,EAAWC,QAAX,kBACG;AACI,kBAAA,GAAG,EAAED,QAAQ,CAACE,QADlB;AAEI,kBAAA,KAAK,EAAEtD,YAAY,CAACqD,QAAQ,CAACpD,cAAV,CAFvB;AAAA,6BAGK,KAAKa,KAAL,CAAWK,SAAX,CAAqBoC,GAArB,CAAyB,CAACL,IAAD,EAAOrD,KAAP,kBACtB,QAAC,aAAD;AAAgB,oBAAA,QAAQ,EAAEuD,QAA1B;AAAoC,oBAAA,QAAQ,EAAIC,QAAhD;AAA0D,oBAAA,IAAI,EAAEH,IAAI,CAACM,IAArE;AAAyF,oBAAA,MAAM,EAAEN,IAAI,CAACrC,EAAtG;AAA0G,oBAAA,KAAK,EAAEhB,KAAjH;AAAwH,oBAAA,UAAU,EAAEqD,IAAI,CAACP,UAAzI;AAAqJ,oBAAA,KAAK,EAAEO,IAAI,CAACR,KAAjK;AAAwK,oBAAA,KAAK,EAAEQ,IAAI,CAACO,KAApL;AAA2L,oBAAA,WAAW,EAAE,KAAKpB;AAA7M,qBAAgFa,IAAI,CAACrC,EAArF;AAAA;AAAA;AAAA;AAAA,0BADH,CAHL,EAMKuC,QAAQ,CAACM,WANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAeI;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA,qCACA,QAAC,SAAD;AAAW,gBAAA,WAAW,EAAC,YAAvB;AAAA,0BACK,CAACN,QAAD,EAAWC,QAAX,kBACG;AACI,kBAAA,GAAG,EAAED,QAAQ,CAACE,QADlB;AAEI,kBAAA,KAAK,EAAEtD,YAAY,CAACqD,QAAQ,CAACpD,cAAV,CAFvB;AAAA,6BAGK,KAAKa,KAAL,CAAWI,QAAX,CAAoBqC,GAApB,CAAwB,CAACL,IAAD,EAAOrD,KAAP,kBACrB,QAAC,aAAD;AAAgB,oBAAA,QAAQ,EAAEuD,QAA1B;AAAoC,oBAAA,QAAQ,EAAIC,QAAhD;AAA0D,oBAAA,IAAI,EAAEH,IAAI,CAACM,IAArE;AAAyF,oBAAA,MAAM,EAAEN,IAAI,CAACrC,EAAtG;AAA0G,oBAAA,KAAK,EAAEhB,KAAjH;AAAwH,oBAAA,UAAU,EAAEqD,IAAI,CAACP,UAAzI;AAAqJ,oBAAA,KAAK,EAAEO,IAAI,CAACR,KAAjK;AAAwK,oBAAA,KAAK,EAAEQ,IAAI,CAACO,KAApL;AAA2L,oBAAA,WAAW,EAAE,KAAKpB;AAA7M,qBAAgFa,IAAI,CAACrC,EAArF;AAAA;AAAA;AAAA;AAAA,0BADH,CAHL,EAMKuC,QAAQ,CAACM,WANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiDH;;AAlL6C","sourcesContent":["import React, { Component} from 'react';\nimport { DragDropContext, Droppable} from 'react-beautiful-dnd';\nimport AdminQuestion from './AdminQuestion';\nimport Button from '@material-ui/core/Button';\nimport ThemeModal from './ThemeModal';\n\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n};\n\nconst grid = 8;\n\nconst getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? 'lightblue' : 'darkgrey',\n    padding: grid,\n    width: \"100%\",\n    height:\"100%\"\n});\n\nexport default class AdminBoard extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            inputData: [],\n            selected: [],\n            isModalOpen: false,\n            sortLogic : {\n                \"inputData\" : {\n                    votes: \"asc\",\n                    timePosted: false\n                },\n                \"selected\" : {\n                    votes: \"asc\",\n                    timePosted: false\n                }\n            }\n        }\n    }\n    componentDidMount(){\n        this.setState({\n            inputData: this.props.getTableData()\n        })\n    }\n\n    switchModal() {\n        this.setState({\n            isModalOpen: ! this.state.isModalOpen\n        })\n    }\n\n    id2List = {\n        droppable: 'inputData',\n        droppable2: 'selected'\n    };\n\n    getList = id => this.state[this.id2List[id]];\n\n    onDragEnd = result => {\n        const { source, destination } = result;\n\n        if (!destination) {\n            return;\n        }\n\n        if (source.droppableId === destination.droppableId) {\n            const items = reorder(\n                this.getList(source.droppableId),\n                source.index,\n                destination.index\n            );\n\n            if (source.droppableId === 'droppable2') {\n                this.setState({\n                    selected:items\n                })\n            }\n            else if (source.droppableId===\"droppable\"){\n                this.setState({\n                    inputData:items\n                })\n            }\n        } else {\n            const result = move(\n                this.getList(source.droppableId),\n                this.getList(destination.droppableId),\n                source,\n                destination\n            );\n\n            this.setState({\n                inputData: result.droppable,\n                selected: result.droppable2\n            });\n        }\n    };\n\n    updateSortLogic = (questionList, attribute, direction) => {\n        let localSortLogic = {...this.state.sortLogic}\n        Object.keys(localSortLogic[questionList]).forEach(v => localSortLogic[questionList][v] = false)\n        localSortLogic[questionList][attribute] = direction;\n        return localSortLogic\n    }\n    sortAscending = (questionList, attribute) => {\n        let data = [].concat(this.state[questionList]).sort((a, b) => b[attribute] - a[attribute])\n        this.setState({\n            [questionList]: data,\n            sortLogic: this.updateSortLogic(questionList, attribute, \"asc\")\n        })\n    }\n    sortDescending = (questionList, attribute) => {\n        let data = [].concat(this.state[questionList]).sort((a, b) => a[attribute] - b[attribute])\n        this.setState({\n            [questionList]: data,\n            sortLogic: this.updateSortLogic(questionList, attribute, \"desc\")\n        })\n    }\n\n    sortByAttribute(questionList, attribute){\n        if ( !this.state.sortLogic[questionList][attribute] || this.state.sortLogic[questionList][attribute] === \"desc\") {\n            this.sortAscending(questionList,attribute)\n        }\n        else if (this.state.sortLogic[questionList][attribute]===\"asc\") {\n            this.sortDescending(questionList, attribute)\n            \n        }\n\n    }\n\n    updateThemeForInput(questionList, newTheme, questionId){\n        let data = [...this.state[questionList]]\n        for(let i=0; i< data.length; i ++){\n            let item = data[i]\n            if(questionId === item[\"id\"]){\n                item[\"theme\"] = newTheme\n                data[i] = item\n                this.setState({\n                    [questionList]: data\n                })\n            }\n        }\n    }\n\n    updateTheme = (newTheme, questionId) => {\n        this.updateThemeForInput('inputData', newTheme, questionId)\n        this.updateThemeForInput('selected', newTheme, questionId)\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"questionList\">\n                    <h1 className=\"one\">Question Submissions</h1>\n                    <h1 className=\"two\">Meeting Order</h1>\n                </div>\n                <div className=\"buttonContainer\">\n                        <Button className=\"adminButton\" onClick={() => {this.sortByAttribute('inputData', 'votes')}}>Sort By Votes</Button>\n                        <Button className=\"adminButton\" onClick={() => {this.sortByAttribute('inputData', 'timePosted')}}>Sort By Date</Button>\n                        <Button className=\"adminButton\" onClick={() => this.switchModal()}>Edit Themes</Button>\n                        <ThemeModal isModalOpen={this.state.isModalOpen} switchModal={() => this.switchModal()}/>\n                        <Button className=\"adminButton\">Save Order</Button>\n                    </div>\n                <div>\n                    <div className=\"questionList\">\n                        <DragDropContext onDragEnd={this.onDragEnd}>\n                            <div className=\"one\">\n                            <Droppable droppableId=\"droppable\">\n                                {(provided, snapshot) => (\n                                    <div\n                                        ref={provided.innerRef}\n                                        style={getListStyle(snapshot.isDraggingOver)}>\n                                        {this.state.inputData.map((item, index) => (\n                                            <AdminQuestion  provided={provided} snapshot = {snapshot} text={item.text} key={item.id} dragId={item.id} index={index} timePosted={item.timePosted} votes={item.votes} theme={item.theme} updateTheme={this.updateTheme}/>\n                                        ))}\n                                        {provided.placeholder}\n                                    </div>\n                                )}\n                            </Droppable>\n                            </div>\n                            <div className=\"two\">\n                            <Droppable droppableId=\"droppable2\">\n                                {(provided, snapshot) => (\n                                    <div\n                                        ref={provided.innerRef}\n                                        style={getListStyle(snapshot.isDraggingOver)}>\n                                        {this.state.selected.map((item, index) => (\n                                            <AdminQuestion  provided={provided} snapshot = {snapshot} text={item.text} key={item.id} dragId={item.id} index={index} timePosted={item.timePosted} votes={item.votes} theme={item.theme} updateTheme={this.updateTheme}/>\n                                        ))}\n                                        {provided.placeholder}\n                                    </div>\n                                )}\n                            </Droppable>\n                            </div>\n                        </DragDropContext>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}