[{"/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/index.js":"1","/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/reportWebVitals.js":"2","/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/App.js":"3","/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/Home.js":"4","/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/Admin.js":"5","/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/api.js":"6","/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/Post.js":"7","/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/QuestionSubmit.js":"8","/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/AdminQuestion.js":"9","/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/ThemeModal.js":"10","/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/Themes.js":"11","/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/AdminQuestionModal.js":"12"},{"size":500,"mtime":1632932897744,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1632932897744,"results":"15","hashOfConfig":"14"},{"size":1104,"mtime":1632932897743,"results":"16","hashOfConfig":"14"},{"size":4230,"mtime":1632932897743,"results":"17","hashOfConfig":"14"},{"size":8178,"mtime":1633282890336,"results":"18","hashOfConfig":"14"},{"size":373,"mtime":1632932897744,"results":"19","hashOfConfig":"14"},{"size":2075,"mtime":1632932897743,"results":"20","hashOfConfig":"14"},{"size":987,"mtime":1632932897743,"results":"21","hashOfConfig":"14"},{"size":3762,"mtime":1633295207422,"results":"22","hashOfConfig":"14"},{"size":1322,"mtime":1633293766788,"results":"23","hashOfConfig":"14"},{"size":69,"mtime":1632932897744,"results":"24","hashOfConfig":"14"},{"size":914,"mtime":1633294174285,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1daohi5",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/index.js",[],["53","54"],"/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/reportWebVitals.js",[],"/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/App.js",[],"/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/Home.js",["55","56","57"],"import React from 'react';\nimport Post from './Post'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from '@material-ui/core/Button';\nimport QuestionModal from './QuestionSubmit';\n\nexport default class Home extends React.Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            inputData: [],\n            userId: \"\",\n            voterData: [],\n            isModalOpen: false,\n            sortLogic : {\n                votes: \"asc\",\n                timePosted: false\n            }\n        }\n    }\n    componentDidMount(){\n        this.setState({\n            inputData: this.props.getTableData(),\n            voterData: this.props.voterData,\n            userId: this.props.userId\n        }, () => {\n            this.sortAscending(\"votes\")\n        })\n    }\n\n\n    updateSortLogic = (attribute, direction) => {\n        let localSortLogic = {...this.state.sortLogic}\n        Object.keys(localSortLogic).forEach(v => localSortLogic[v] = false)\n        localSortLogic[attribute] = direction;\n        return localSortLogic\n    }\n    sortAscending = (attribute) => {\n        let data = [].concat(this.state.inputData).sort((a, b) => b[attribute] - a[attribute])\n        this.setState({\n            inputData: data,\n            sortLogic: this.updateSortLogic(attribute, \"asc\")\n        })\n    }\n    sortDescending = (attribute) => {\n        let data = [].concat(this.state.inputData).sort((a, b) => a[attribute] - b[attribute])\n        this.setState({\n            inputData: data,\n            sortLogic: this.updateSortLogic(attribute, \"desc\")\n        })\n    }\n\n    sortByAttribute(attribute){\n        if ( !this.state.sortLogic[attribute] || this.state.sortLogic[attribute] === \"desc\") {\n            this.sortAscending(attribute)\n        }\n        else if (this.state.sortLogic[attribute] === \"asc\") {\n            this.sortDescending(attribute)\n            \n        }\n\n    }\n\n    incrementVote(postId){\n        let inputData = this.state.inputData.map((post) => {\n            if(post.id ===  postId){\n                post.votes = post.votes + 1\n            }\n            return post\n        })\n        let voterData = [].concat(this.state.voterData)\n        voterData.push({\n            id: postId\n        })\n\n        this.setState({\n            inputData: inputData,\n            voterData: voterData\n        })\n    }\n\n    decrementVote(postId){\n        let inputData = this.state.inputData.map((post) => {\n            if(post.id ===  postId){\n                post.votes = post.votes - 1\n            }\n            return post\n        })\n\n        let voterData = this.state.voterData.filter((element) => {\n            return element[\"id\"] != postId\n        })\n\n        this.setState({\n            inputData: inputData,\n            voterData: voterData\n        })\n    }\n\n    hasUserVoted(postId){\n        let result = false\n        this.state.voterData.map((question)=> {\n            if(eval(question.id) === Number(postId)){\n                result = true\n            }\n        })\n        return result\n    }\n\n    switchModal() {\n        this.setState({\n            isModalOpen: ! this.state.isModalOpen\n        })\n    }\n\n    render(){\n\n        return(\n            <div className=\"container\">\n                <div className=\"submitQuestionContainer\">\n                    <textarea onClick={() => this.switchModal()} placeholder='Ask us anything...' className=\"submitQuestionText\"/>\n                    <QuestionModal isModalOpen={this.state.isModalOpen} switchModal={() => this.switchModal()}/>\n                </div>\n                <Button className=\"adminButton\" onClick={() => {this.sortByAttribute('votes')}}>Popular</Button>\n                <Button className=\"adminButton\" onClick={() => {this.sortByAttribute('timePosted')}}>Most Recent</Button>\n                <div className=\"postContainer\">\n                    {this.state.inputData.map((item, index) => \n                    <Post votes={item.votes} poster={item.poster} text={item.text} id={item.id} key={item.id} incrementVote={this.incrementVote.bind(this)} decrementVote={this.decrementVote.bind(this)} hasUserVoted={this.hasUserVoted(item.id)} answer={item.answer}/>)}\n                </div>\n            </div>\n        )\n    }\n}","/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/Admin.js",[],"/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/api.js",[],"/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/Post.js",[],"/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/QuestionSubmit.js",["58","59","60"],"import React, {useState}  from 'react';\nimport themes from './Themes'\nimport { Modal } from 'react-bootstrap';\nimport Button from '@material-ui/core/Button';\n\nexport default function QuestionModal(props) {\n\n    function submit(){\n        props.switchModal()\n    }\n    return (\n        <Modal show={props.isModalOpen} onHide={props.switchModal} dialogClassName=\"submitQuestionModal\">\n          <Modal.Header closeButton>\n              <Modal.Title>Submit Question</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n          <form onSubmit={submit}>\n            <textarea rows=\"4\" className=\"submitQuestionForm\" placeholder='Ask us anything...'/>\n            <div>\n                <input className=\"questionSubmitContainer\" id=\"isAnonymous\" type=\"checkbox\"/>\n                <label for=\"isAnonymous\">  Ask Anonymously</label>\n                <input type=\"submit\" value=\"Post Question\"/>\n            </div>\n            </form>\n          </Modal.Body>\n        </Modal>\n    );\n}\n","/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/AdminQuestion.js",["61"],"/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/ThemeModal.js",[],"/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/Themes.js",[],"/Users/caitlinhamilton/Programming/askMeAnything/AskMeAnything/src/AdminQuestionModal.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":92,"column":34,"nodeType":"68","messageId":"69","endLine":92,"endColumn":36},{"ruleId":"70","severity":1,"message":"71","line":103,"column":44,"nodeType":"72","messageId":"73","endLine":103,"endColumn":46},{"ruleId":"74","severity":1,"message":"75","line":104,"column":16,"nodeType":"76","messageId":"69","endLine":104,"endColumn":20},{"ruleId":"77","severity":1,"message":"78","line":1,"column":16,"nodeType":"79","messageId":"80","endLine":1,"endColumn":24},{"ruleId":"77","severity":1,"message":"81","line":2,"column":8,"nodeType":"79","messageId":"80","endLine":2,"endColumn":14},{"ruleId":"77","severity":1,"message":"82","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":14},{"ruleId":"66","severity":1,"message":"67","line":63,"column":31,"nodeType":"68","messageId":"69","endLine":63,"endColumn":33},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-eval","eval can be harmful.","CallExpression","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'themes' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]